{"version":3,"sources":["../src/internal/wrap-start.js","../src/internal/b.js","../src/lib/type.js","../src/lib/browser.js","../src/lib/unicode.js","../src/lib/arrays.js","../src/lib/text.js","../src/lib/event.js","../src/libs.js","../src/core.js","../src/internal/wrap-end.js"],"names":["bTmp","window","B","Object","keys","forEach","key","exports","Type","value","isArray","isString","length","isNumber","isBoolean","isObject","isEmpty","getOwnPropertyNames","isNil","type","prototype","toString","call","map","other","isSymbol","result","isObjectLike","proto","getPrototypeOf","ctor","hasOwnProperty","constructor","Function","trueValues","transformedValue","toLowerCase","includes","isNaN","parsedValue","parseFloat","toNumber","parseInt","isInteger","undefined","Array","isPlainObject","size","isFunction","slice","isBlob","lastModifiedDate","lastModified","name","FormData","UA","navigator","userAgent","Browser","document","isOpera","documentMode","isSafari","isFirefox","isChrome","rv","MSStream","ActiveXObject","isIE10","isIE9","isIE","appName","re","RegExp","res","match","isArrayLike","exec","detectIEVersion","isIPad","isIPhone","isAndroid","devicePixelRatio","target","doc","compatMode","documentElement","clientHeight","localStorage","setItem","removeItem","e","jsProperty","returnCSSName","getCssName","propertyName","replace","args","getJsName","cssName","reg","test","toUpperCase","property","bReturnCSSName","ucProperty","charAt","props","join","properties","split","obj","body","i","prop","style","lowerProp","substr","prefix","rsAstralRange","rsComboMarksRange","reComboHalfMarksRange","rsComboSymbolsRange","rsComboMarksExtendedRange","rsComboMarksSupplementRange","rsComboRange","rsVarRange","rsAstral","rsCombo","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsZWJ","reOptMod","rsOptVar","rsOptJoin","rsSeq","rsNonAstralCombo","rsSymbol","reUnicode","reHasUnicode","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsPunctuationRange","rsSpaceRange","rsUpperRange","rsBreakRange","rsApos","rsBreak","rsDigit","rsDingbat","rsLower","rsMisc","rsUpper","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","rsOrdLower","rsOrdUpper","rsEmoji","reUnicodeWords","Unicode","string","lastIndex","Arrays","array","clean","values","defaultValue","getValues","convertKeyToString","v","convertString","getKeys","filter","indexOf","keyExists","lastKey","pop","keyPart","getValue","pos","Text","position","splice","val","remove","keepKeys","resultObject","push","fromIndex","index","strictIndexOf","baseFindIndex","predicate","fromRight","start","end","Math","max","toInteger","resIndex","ceil","reEscape","reUnescape","escapeEntities","unescapeEntities","item","random","str","regex","letter","capitalize","toCamelCase","matches","x","symbol","chars","trim","strSymbols","toArray","chrSymbols","charsStartIndex","charsEndIndex","castSlice","trimLeft","trimRight","baseIndexOf","has","replacement","stringLength","trimMarker","trimMarkerLength","replaceSubstring","rules","tagStart","tagEnd","macros","flag","separator","skipEmpty","offset","needle","haystack","insensitive","last","value1","value2","cut","Event","handled","data","events","WeakMap","eventObject","get","eventName","eventHandler","append","isNull","_get","unshift","set","removed","event","eventParams","globalEvents","globalHandlers","objectHandlers","objectEvents","handlers","concat","handler","apply","reduce","acc","isNotEmptyString","isNotEmptyObject","isMapKey","stringToInt","parsed","Number","browser","IsOpera","IsIE","IsIE6","isIE6","IsIE7","isIE7","IsIE8","isIE8","IsIE9","IsIE10","IsIE11","isIE11","IsSafari","IsFirefox","IsChrome","DetectIeVersion","IsMac","isMac","IsAndroid","IsIOS","isIOS","IsMobile","isMobile","isRetina","IsDoctype","isDoctype","SupportLocalStorage","isLocalStorageSupported","addGlobalClass","DetectAndroidVersion","detectAndroidVersion","isPropertySupported","addGlobalFeatures","on","off","trigger","getRandom","replaceMacros","global","assign"],"mappings":"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","file":"core.js.map","sourcesContent":[null,"let bTmp = window.B\r\n\r\nwindow.B = {}\r\n\r\nif (bTmp)\r\n{\r\n    Object.keys(bTmp).forEach(key => {\r\n        window.B[key] = bTmp[key]\r\n    })\r\n}\r\n\r\nexports = window.B","export default class Type\r\n{\r\n    /**\r\n     *\r\n     * @param {*} value\r\n     * @returns {boolean}\r\n     */\r\n    static isEmpty(value)\r\n    {\r\n        if (this.isArray(value) || this.isString(value))\r\n            return value.length === 0\r\n\r\n        if (this.isNumber(value))\r\n            return value === 0\r\n\r\n        if (this.isBoolean(value))\r\n            return value === false\r\n\r\n        if (this.isObject(value))\r\n            return this.isEmpty(Object.getOwnPropertyNames(value))\r\n\r\n        return this.isNil(value)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} value\r\n     * @returns {boolean}\r\n     */\r\n    static isString(value)\r\n    {\r\n        return typeof value === 'string'\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} value\r\n     * @returns {boolean}\r\n     */\r\n    static isSymbol(value)\r\n    {\r\n        const type = typeof value\r\n        return type == 'symbol' || (type === 'object' && value != null && Object.prototype.toString.call(value) == '[object Symbol]')\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} value\r\n     * @returns {string}\r\n     */\r\n    static toString(value)\r\n    {\r\n        if (this.isString(value))\r\n            return value\r\n\r\n        if (this.isNil(value) || this.isObject(value))\r\n            return ''\r\n\r\n        if (this.isBoolean(value))\r\n            return !!value ? '1' : ''\r\n\r\n        if (this.isArray(value)) {\r\n            return `${value.map((other) => other == null ? other : this.toString(other))}`\r\n        }\r\n\r\n        if (this.isSymbol(value))\r\n            return value.toString()\r\n\r\n        const result = `${value}`\r\n\r\n        return (result == '0' && (1 / value) == -(1 / 0)) ? '-0' : result\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} value\r\n     * @returns {boolean}\r\n     */\r\n    static isFunction(value)\r\n    {\r\n        return typeof value === 'function'\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} value\r\n     * @returns {boolean}\r\n     */\r\n    static isObject(value)\r\n    {\r\n        return !!value && (typeof value === 'object' || typeof value === 'function')\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} value\r\n     * @returns {boolean}\r\n     */\r\n    static isObjectLike(value)\r\n    {\r\n        return !!value && typeof value === 'object'\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} value\r\n     * @returns {boolean}\r\n     */\r\n    static isPlainObject(value)\r\n    {\r\n        if (!this.isObjectLike(value) || Object.prototype.toString.call(value) !== '[object Object]')\r\n        {\r\n            return false\r\n        }\r\n\r\n        const proto = Object.getPrototypeOf(value)\r\n        if (proto === null)\r\n        {\r\n            return true\r\n        }\r\n\r\n        const ctor = proto.hasOwnProperty('constructor') && proto.constructor\r\n\r\n        return (\r\n            typeof ctor === 'function' &&\r\n            Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object)\r\n        )\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} value\r\n     * @returns {boolean}\r\n     */\r\n    static isBoolean(value)\r\n    {\r\n        return value === true || value === false\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {any} value\r\n     * @param {array} trueValues\r\n     * @returns {boolean}\r\n     */\r\n    static toBoolean(value, trueValues = [])\r\n    {\r\n        const transformedValue = this.isString(value) ? value.toLowerCase() : value\r\n        return ['true', 'y', '1', 1, true, ...trueValues].includes(transformedValue)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} value\r\n     * @returns {boolean}\r\n     */\r\n    static isNumber(value)\r\n    {\r\n        return typeof value === 'number' && !isNaN(value)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} value\r\n     * @returns {number}\r\n     */\r\n    static toNumber(value)\r\n    {\r\n        let parsedValue = parseFloat(value)\r\n        return this.isNumber(parsedValue) ? parsedValue : 0\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} value\r\n     * @returns {boolean}\r\n     */\r\n    static isInteger(value)\r\n    {\r\n        return this.isNumber(value) && (value % 1) === 0\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} value\r\n     * @returns {number}\r\n     */\r\n    static toInteger(value)\r\n    {\r\n        return this.toNumber(parseInt(value, 10))\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} value\r\n     * @returns {boolean}\r\n     */\r\n    static isFloat(value)\r\n    {\r\n        return this.isNumber(value) && !this.isInteger(value)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {any} value\r\n     * @returns {number}\r\n     */\r\n    static toFloat(value)\r\n    {\r\n        return parseFloat(value)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} value\r\n     * @returns {boolean}\r\n     */\r\n    static isNil(value)\r\n    {\r\n        return value === null || value === undefined\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param {*} value\r\n     * @returns {boolean}\r\n     */\r\n    static isArray(value)\r\n    {\r\n        return !this.isNil(value) && Array.isArray(value)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} value\r\n     * @returns {boolean}\r\n     */\r\n    static isDate(value)\r\n    {\r\n        return this.isObjectLike(value) && Object.prototype.toString.call(value) === '[object Date]'\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} value\r\n     * @returns {boolean}\r\n     */\r\n    static isDomNode(value)\r\n    {\r\n        return this.isObjectLike(value) && !this.isPlainObject(value) && 'nodeType' in value\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} value\r\n     * @returns {boolean}\r\n     */\r\n    static isPrototype(value)\r\n    {\r\n        return (\r\n            (((typeof (value && value.constructor) === 'function') && value.constructor.prototype) || Object.prototype) === value\r\n        )\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} value\r\n     * @returns {boolean}\r\n     */\r\n    static isNull(value)\r\n    {\r\n        return value === null\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} value\r\n     * @returns {boolean}\r\n     */\r\n    static isUndefined(value)\r\n    {\r\n        return typeof value === 'undefined'\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} value\r\n     * @returns {boolean}\r\n     */\r\n    static isBlob(value)\r\n    {\r\n        return (\r\n            this.isObjectLike(value)\r\n            && this.isNumber(value.size)\r\n            && this.isString(value.type)\r\n            && this.isFunction(value.slice)\r\n        )\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} value\r\n     * @returns {boolean}\r\n     */\r\n    static isFile(value)\r\n    {\r\n        return (\r\n            this.isBlob(value)\r\n            && this.isObjectLike(value.lastModifiedDate)\r\n            && this.isNumber(value.lastModified)\r\n            && this.isString(value.name)\r\n        )\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} value\r\n     * @returns {boolean}\r\n     */\r\n    static isFormData(value)\r\n    {\r\n        return value instanceof FormData\r\n    }\r\n}","import Type from './type'\r\n\r\nconst UA = navigator.userAgent.toLowerCase()\r\n\r\nexport default class Browser\r\n{\r\n\tstatic isOpera()\r\n\t{\r\n\t\treturn UA.includes('opera')\r\n\t}\r\n\r\n\tstatic isIE()\r\n\t{\r\n\t\treturn ('attachEvent' in document) && !Browser.isOpera()\r\n\t}\r\n\r\n\tstatic isIE6()\r\n\t{\r\n\t\treturn UA.includes('msie 6')\r\n\t}\r\n\r\n\tstatic isIE7()\r\n\t{\r\n\t\treturn UA.includes('msie 7')\r\n\t}\r\n\r\n\tstatic isIE8()\r\n\t{\r\n\t\treturn UA.includes('msie 8')\r\n\t}\r\n\r\n\tstatic isIE9()\r\n\t{\r\n\t\treturn ('documentMode' in document) && document.documentMode >= 9\r\n\t}\r\n\r\n\tstatic isIE10()\r\n\t{\r\n\t\treturn ('documentMode' in document) && document.documentMode >= 10\r\n\t}\r\n\r\n\tstatic isSafari()\r\n\t{\r\n\t\treturn UA.includes('webkit')\r\n\t}\r\n\r\n\tstatic isFirefox()\r\n\t{\r\n\t\treturn UA.includes('firefox')\r\n\t}\r\n\r\n\tstatic isChrome()\r\n\t{\r\n\t\treturn UA.includes('chrome')\r\n\t}\r\n\r\n\tstatic detectIEVersion()\r\n\t{\r\n\t\tif (Browser.isOpera() || Browser.isSafari() || Browser.isFirefox() || Browser.isChrome())\r\n\t\t{\r\n\t\t\treturn -1\r\n\t\t}\r\n\r\n\t\tlet rv = -1\r\n\r\n\t\tif (\r\n\t\t\t!!(window.MSStream)\r\n\t\t\t&& !(window.ActiveXObject)\r\n\t\t\t&& ('ActiveXObject' in window)\r\n\t\t)\r\n\t\t{\r\n\t\t\trv = 11\r\n\t\t}\r\n\t\telse if (Browser.isIE10())\r\n\t\t{\r\n\t\t\trv = 10\r\n\t\t}\r\n\t\telse if (Browser.isIE9())\r\n\t\t{\r\n\t\t\trv = 9\r\n\t\t}\r\n\t\telse if (Browser.isIE())\r\n\t\t{\r\n\t\t\trv = 8\r\n\t\t}\r\n\r\n\t\tif (rv === -1 || rv === 8)\r\n\t\t{\r\n\t\t\tif (navigator.appName === 'Microsoft Internet Explorer')\r\n\t\t\t{\r\n\t\t\t\tconst re = new RegExp('MSIE ([0-9]+[.0-9]*)')\r\n\t\t\t\tconst res = navigator.userAgent.match(re)\r\n\r\n\t\t\t\tif (Type.isArrayLike(res) && res.length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\trv = parseFloat(res[1])\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (navigator.appName === 'Netscape')\r\n\t\t\t{\r\n\t\t\t\trv = 11\r\n\t\t\t\tconst re = new RegExp('Trident/.*rv:([0-9]+[.0-9]*)')\r\n\r\n\t\t\t\tif (re.exec(navigator.userAgent) != null)\r\n\t\t\t\t{\r\n\t\t\t\t\tconst res = navigator.userAgent.match(re)\r\n\r\n\t\t\t\t\tif (Type.isArrayLike(res) && res.length > 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trv = parseFloat(res[1])\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn rv\r\n\t}\r\n\r\n\tstatic isIE11()\r\n\t{\r\n\t\treturn Browser.detectIEVersion() >= 11\r\n\t}\r\n\r\n\tstatic isMac()\r\n\t{\r\n\t\treturn UA.includes('macintosh')\r\n\t}\r\n\r\n\tstatic isAndroid()\r\n\t{\r\n\t\treturn UA.includes('android')\r\n\t}\r\n\r\n\tstatic isIPad()\r\n\t{\r\n\t\treturn UA.includes('ipad;')\r\n\t}\r\n\r\n\tstatic isIPhone()\r\n\t{\r\n\t\treturn UA.includes('iphone;')\r\n\t}\r\n\r\n\tstatic isIOS()\r\n\t{\r\n\t\treturn Browser.isIPad() || Browser.isIPhone()\r\n\t}\r\n\r\n\tstatic isMobile()\r\n\t{\r\n\t\treturn (\r\n\t\t\tBrowser.isIPhone()\r\n\t\t\t|| Browser.isIPad()\r\n\t\t\t|| Browser.isAndroid()\r\n\t\t\t|| UA.includes('mobile')\r\n\t\t\t|| UA.includes('touch')\r\n\t\t)\r\n\t}\r\n\r\n\tstatic isRetina()\r\n\t{\r\n\t\treturn window.devicePixelRatio && window.devicePixelRatio >= 2\r\n\t}\r\n\r\n\tstatic isDoctype(target)\r\n\t{\r\n\t\tconst doc = target || document\r\n\r\n\t\tif (doc.compatMode)\r\n\t\t{\r\n\t\t\treturn (doc.compatMode === 'CSS1Compat')\r\n\t\t}\r\n\r\n\t\treturn (doc.documentElement && doc.documentElement.clientHeight)\r\n\t}\r\n\r\n\tstatic isLocalStorageSupported()\r\n\t{\r\n\t\ttry\r\n\t\t{\r\n\t\t\tlocalStorage.setItem('test', 'test')\r\n\t\t\tlocalStorage.removeItem('test')\r\n\t\t\treturn true\r\n\t\t}\r\n\t\tcatch (e)\r\n\t\t{\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tstatic detectAndroidVersion()\r\n\t{\r\n\t\tconst re = new RegExp('Android ([0-9]+[.0-9]*)')\r\n\r\n\t\tif (re.exec(navigator.userAgent) != null)\r\n\t\t{\r\n\t\t\tconst res = navigator.userAgent.match(re)\r\n\r\n\t\t\tif (Type.isArrayLike(res) && res.length > 0)\r\n\t\t\t{\r\n\t\t\t\treturn parseFloat(res[1])\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn 0\r\n\t}\r\n\r\n\tstatic isPropertySupported(jsProperty, returnCSSName)\r\n\t{\r\n\t\tif (jsProperty === '')\r\n\t\t{\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\tfunction getCssName(propertyName)\r\n\t\t{\r\n\t\t\treturn propertyName.replace(/([A-Z])/g, (...args) => `-${args[1].toLowerCase()}`)\r\n\t\t}\r\n\r\n\t\tfunction getJsName(cssName)\r\n\t\t{\r\n\t\t\tconst reg = /(\\\\-([a-z]))/g\r\n\r\n\t\t\tif (reg.test(cssName))\r\n\t\t\t{\r\n\t\t\t\treturn cssName.replace(reg, (...args) => args[2].toUpperCase())\r\n\t\t\t}\r\n\r\n\t\t\treturn cssName\r\n\t\t}\r\n\r\n\t\tconst property = jsProperty.includes('-') ? getJsName(jsProperty) : jsProperty\r\n\t\tconst bReturnCSSName = !!returnCSSName\r\n\t\tconst ucProperty = property.charAt(0).toUpperCase() + property.slice(1)\r\n\t\tconst props = ['Webkit', 'Moz', 'O', 'ms'].join(`${ucProperty} `)\r\n\t\tconst properties = `${property} ${props} ${ucProperty}`.split(' ')\r\n\r\n\t\tconst obj = document.body || document.documentElement\r\n\r\n\t\tfor (let i = 0; i < properties.length; i += 1)\r\n\t\t{\r\n\t\t\tconst prop = properties[i]\r\n\r\n\t\t\tif (obj && 'style' in obj && prop in obj.style)\r\n\t\t\t{\r\n\t\t\t\tconst lowerProp = prop.substr(0, prop.length - property.length).toLowerCase()\r\n\t\t\t\tconst prefix = prop === property ? '' : `-${lowerProp}-`\r\n\t\t\t\treturn bReturnCSSName ? prefix + getCssName(property) : prop\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false\r\n\t}\r\n}","const rsAstralRange = '\\\\ud800-\\\\udfff'\r\nconst rsComboMarksRange = '\\\\u0300-\\\\u036f'\r\nconst reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f'\r\nconst rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff'\r\nconst rsComboMarksExtendedRange = '\\\\u1ab0-\\\\u1aff'\r\nconst rsComboMarksSupplementRange = '\\\\u1dc0-\\\\u1dff'\r\nconst rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange + rsComboMarksExtendedRange + rsComboMarksSupplementRange\r\nconst rsVarRange = '\\\\ufe0e\\\\ufe0f'\r\n\r\nconst rsAstral = `[${rsAstralRange}]`\r\nconst rsCombo = `[${rsComboRange}]`\r\nconst rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]'\r\nconst rsModifier = `(?:${rsCombo}|${rsFitz})`\r\nconst rsNonAstral = `[^${rsAstralRange}]`\r\nconst rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}'\r\nconst rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]'\r\nconst rsZWJ = '\\\\u200d'\r\n\r\nconst reOptMod = `${rsModifier}?`\r\nconst rsOptVar = `[${rsVarRange}]?`\r\nconst rsOptJoin = `(?:${rsZWJ}(?:${[rsNonAstral, rsRegional, rsSurrPair].join('|')})${rsOptVar + reOptMod})*`\r\nconst rsSeq = rsOptVar + reOptMod + rsOptJoin\r\nconst rsNonAstralCombo = `${rsNonAstral}${rsCombo}?`\r\nconst rsSymbol = `(?:${[rsNonAstralCombo, rsCombo, rsRegional, rsSurrPair, rsAstral].join('|')})`\r\n\r\nconst reUnicode = RegExp(`${rsFitz}(?=${rsFitz})|${rsSymbol + rsSeq}`, 'g')\r\n\r\nconst reHasUnicode = RegExp(`[${rsZWJ + rsAstralRange + rsComboRange + rsVarRange}]`)\r\n\r\nconst rsDingbatRange = '\\\\u2700-\\\\u27bf'\r\nconst rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff'\r\nconst rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7'\r\nconst rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf'\r\nconst rsPunctuationRange = '\\\\u2000-\\\\u206f'\r\nconst rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000'\r\nconst rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde'\r\nconst rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange\r\n\r\nconst rsApos = \"['\\u2019]\"\r\nconst rsBreak = `[${rsBreakRange}]`\r\nconst rsDigit = '\\\\d'\r\nconst rsDingbat = `[${rsDingbatRange}]`\r\nconst rsLower = `[${rsLowerRange}]`\r\nconst rsMisc = `[^${rsAstralRange}${rsBreakRange + rsDigit + rsDingbatRange + rsLowerRange + rsUpperRange}]`\r\nconst rsUpper = `[${rsUpperRange}]`\r\n\r\nconst rsMiscLower = `(?:${rsLower}|${rsMisc})`\r\nconst rsMiscUpper = `(?:${rsUpper}|${rsMisc})`\r\nconst rsOptContrLower = `(?:${rsApos}(?:d|ll|m|re|s|t|ve))?`\r\nconst rsOptContrUpper = `(?:${rsApos}(?:D|LL|M|RE|S|T|VE))?`\r\nconst rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])'\r\nconst rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])'\r\nconst rsEmoji = `(?:${[rsDingbat, rsRegional, rsSurrPair].join('|')})${rsSeq}`\r\n\r\nconst reUnicodeWords = RegExp([\r\n    `${rsUpper}?${rsLower}+${rsOptContrLower}(?=${[rsBreak, rsUpper, '$'].join('|')})`,\r\n    `${rsMiscUpper}+${rsOptContrUpper}(?=${[rsBreak, rsUpper + rsMiscLower, '$'].join('|')})`,\r\n    `${rsUpper}?${rsMiscLower}+${rsOptContrLower}`,\r\n    `${rsUpper}+${rsOptContrUpper}`,\r\n    rsOrdUpper,\r\n    rsOrdLower,\r\n    `${rsDigit}+`,\r\n    rsEmoji\r\n].join('|'), 'g')\r\n\r\nexport default class Unicode\r\n{\r\n    static has(string)\r\n    {\r\n        return reHasUnicode.test(string)\r\n    }\r\n\r\n    static toArray(string)\r\n    {\r\n        return string.match(reUnicode) || []\r\n    }\r\n\r\n    static size(string)\r\n    {\r\n        let result = reUnicode.lastIndex = 0\r\n        while (reUnicode.test(string))\r\n        {\r\n            ++result\r\n        }\r\n        return result\r\n    }\r\n\r\n    static words(string)\r\n    {\r\n        return string.match(reUnicodeWords)\r\n    }\r\n}","import Type from \"./type\"\r\nimport Text from \"./text\"\r\n\r\nexport default class Arrays\r\n{\r\n    /**\r\n     * Возвращает значения с новыми ключами\r\n     *\r\n     * @param {array|object} array Массив или объект\r\n     * @param {boolean} clean Нужно ли очищать от null и undefined\r\n     * @returns {array}\r\n     */\r\n    static getValues(array, clean = true)\r\n    {\r\n        if (Type.isArray(array))\r\n            return clean ? this.clean(array) : array\r\n\r\n        if(Type.isObjectLike(array))\r\n        {\r\n            array = Object.values(array)\r\n            return clean ? this.clean(array) : array\r\n        }\r\n\r\n        return []\r\n    }\r\n\r\n    /**\r\n     * Возвращает первое значение, или значение по умолчанию\r\n     *\r\n     * @param {array|object} array Массив или объект\r\n     * @param {mixed} defaultValue Значение по умолчанию\r\n     * @param {boolean} clean Нужно ли очищать от null и undefined\r\n     * @returns {mixed}\r\n     */\r\n    static getFirstValue(array, defaultValue = null, clean = true)\r\n    {\r\n        let values = this.getValues(array, clean)\r\n        return values.length ? values[0] : defaultValue\r\n    }\r\n\r\n    /**\r\n     * Возвращает последнее значение, или значение по умолчанию\r\n     *\r\n     * @param {array|object} array Массив или объект\r\n     * @param {mixed} defaultValue Значение по умолчанию\r\n     * @param {boolean} clean Нужно ли очищать от null и undefined\r\n     * @returns {mixed}\r\n     */\r\n    static getLastValue(array, defaultValue = null, clean = true)\r\n    {\r\n        let values = this.getValues(array, clean)\r\n        return values.length ? values[values.length - 1] : defaultValue\r\n    }\r\n\r\n    /**\r\n     * Возвращает массив ключей\r\n     *\r\n     * @param {array|object} array Массив или объект\r\n     * @param {boolean} convertKeyToString Конвертировать ключи массива в строку\r\n     * @returns {array}\r\n     */\r\n    static getKeys(array, convertKeyToString = false)\r\n    {\r\n        if (Type.isArray(array))\r\n            return array.map((v, i) => convertKeyToString ? i.toString() : i)\r\n\r\n        if(Type.isObjectLike(array))\r\n            return Object.keys(array)\r\n\r\n        return []\r\n    }\r\n\r\n    /**\r\n     * Возвращает первый ключ, или значение по умолчанию\r\n     *\r\n     * @param {array|object} array Массив или объект\r\n     * @param {mixed} defaultValue Значение по умолчанию\r\n     * @param {boolean} convertString Конвертировать ключи массива в строку\r\n     * @returns {mixed}\r\n     */\r\n    static getFirstKey(array, defaultValue = null, convertString = false)\r\n    {\r\n        let keys = this.getKeys(array, convertString)\r\n        return keys.length ? keys[0] : defaultValue\r\n    }\r\n\r\n    /**\r\n     * Возвращает последний ключ, или значение по умолчанию\r\n     *\r\n     * @param {array|object} array Массив или объект\r\n     * @param {mixed} defaultValue Значение по умолчанию\r\n     * @param {boolean} convertString Конвертировать ключи массива в строку\r\n     * @returns {mixed}\r\n     */\r\n    static getLastKey(array, defaultValue = null, convertString = false)\r\n    {\r\n        let keys = this.getKeys(array, convertString)\r\n        return keys.length ? keys[keys.length - 1] : defaultValue\r\n    }\r\n\r\n    /**\r\n     * Очищает значения массива от null или undefined\r\n     *\r\n     * @param {array} array Массив\r\n     * @returns {array} Очищенный массив\r\n     */\r\n    static clean(array)\r\n    {\r\n        if (Type.isArray(array))\r\n            return array.filter(value => !Type.isNil(value))\r\n\r\n        return []\r\n    }\r\n\r\n    /**\r\n     * Проверяет, присутствует ли в массиве или объекте указанный ключ\r\n     *\r\n     * @param {string|number} key Ключ\r\n     * @param {array|object} array Массив или объект\r\n     * @returns {boolean}\r\n     */\r\n    static keyExists(key, array)\r\n    {\r\n        if (Type.isArray(array) || Type.isObjectLike(array))\r\n            return array.hasOwnProperty(key)\r\n\r\n        return false\r\n    }\r\n\r\n    /**\r\n     * Проверяет, присутствует ли в массиве или объекте значение\r\n     *\r\n     * @param {mixed} value Значение\r\n     * @param {array|object} array Массив или объект\r\n     * @returns {boolean}\r\n     */\r\n    static isIn(value, array)\r\n    {\r\n        if (Type.isArray(array))\r\n            return array.indexOf(value) >= 0\r\n\r\n        if (Type.isObjectLike(array))\r\n        {\r\n            let keys = Object.keys(array)\r\n            for (let key of keys)\r\n            {\r\n                if (array[key] === value)\r\n                {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    /**\r\n     *  Возращает значение элемента, если оно найдено, или значение по умолчанию\r\n     *\r\n     * @param {array|object} array Массив или объект\r\n     * @param {string|number} key Ключ\r\n     * @param {mixed} defaultValue Значение по умолчанию\r\n     * @returns {mixed}\r\n     */\r\n    static getRootValue(array, key, defaultValue)\r\n    {\r\n        return this.keyExists(key, array) ? array[key] : defaultValue\r\n    }\r\n\r\n    /**\r\n     * Извлекает значение элемента массива или объекта с заданным ключом\r\n     * Если ключ не существует в массиве или объекте, вместо него будет возвращено значение по умолчанию\r\n     *\r\n     * Ниже приведены некоторые примеры использования,\r\n     *\r\n     * работа с массивом:\r\n     * let array = [\r\n     *      \"первое значение\",\r\n     *      \"второе значение\",\r\n     * ]\r\n     *\r\n     * Arrays.getValue(array, 1)\r\n     * вернет \"второе значение\"\r\n     *\r\n     *\r\n     * работа с объектом:\r\n     * let object = {\r\n     *     one: \"1\",\r\n     *     two: \"2\"\r\n     * }\r\n     *\r\n     * Arrays.getValue(object, 'one')\r\n     * вернет \"1\"\r\n     *\r\n     *\r\n     *\r\n     * работа с функцией:\r\n     * let user = {\r\n     *     firstName: \"Имя\",\r\n     *     lastName: \"Фамилия\"\r\n     * }\r\n     *\r\n     * B.Arrays.getValue(user, function(user, defaultValue) {\r\n     *     return user.firstName + ' ' + user.lastName\r\n     * })\r\n     * вернет \"Имя Фамилия\"\r\n     *\r\n     * использование точечного формата для получения значения встроенного объекта или массива\r\n     *\r\n     * let array = [\r\n     *      [\"Яблоко\", \"Груша\", \"Слива\"],\r\n     *      [\"Апельсин\", \"Мандарин\"],\r\n     * ]\r\n     *\r\n     * Arrays.getValue(array, '0.2') или Arrays.getValue(array, [0, 2])\r\n     * вернет \"Слива\"\r\n     *\r\n     * let object = {\r\n     *      one: {\r\n     *          two: {\r\n     *              three: \"Значение three\"\r\n     *          }\r\n     *      }\r\n     * }\r\n     *\r\n     *\r\n     * Arrays.getValue(object, 'one.two.three') или Arrays.getValue(object, ['one', 'two', 'three'])\r\n     * вернет \"Значение three\"\r\n     *\r\n     *\r\n     * @param {array|object} array Массив или объект\r\n     * @param {string|number|function|array} key Ключ\r\n     * @param {mixed} defaultValue Значение по умолчанию\r\n     * @returns {mixed}\r\n     */\r\n    static getValue(array, key, defaultValue = null)\r\n    {\r\n        if (Type.isFunction(key))\r\n            return key(array, defaultValue)\r\n\r\n        if (Type.isArray(key))\r\n        {\r\n            let lastKey = key.pop()\r\n\r\n            for (let keyPart of key)\r\n            {\r\n                array = this.getValue(array, keyPart)\r\n            }\r\n\r\n            key = lastKey\r\n        }\r\n\r\n        if ((Type.isArray(key) || Type.isObjectLike(key)) && this.keyExists(key, array))\r\n            return array[key]\r\n\r\n        let pos = Text.position(\".\", key)\r\n\r\n        if (pos !== false)\r\n        {\r\n            array = this.getValue(array, Type.toString(key).substr(0, pos), defaultValue)\r\n            key = Type.toString(key).substr(pos + 1)\r\n\r\n            return this.getValue(array, key, defaultValue)\r\n        }\r\n\r\n        return this.keyExists(key, array) ? array[key] : defaultValue\r\n    }\r\n\r\n    /**\r\n     * Удаляет значение массива или объекта по ключу\r\n     *\r\n     * @param {array|object} array Массив или объект\r\n     * @param {string|number} key Ключ\r\n     * @param {mixed} defaultValue Значение по умолчанию\r\n     * @returns {mixed} Возвращает значение элемента массива или объекта, если оно удалилось, в противном случае значение по умолчанию\r\n     */\r\n    static remove(array, key, defaultValue = null)\r\n    {\r\n        if (this.keyExists(key, array))\r\n        {\r\n            let value = array[key]\r\n            if (Type.isArray(array))\r\n                array.splice(array.indexOf(key), 1)\r\n\r\n            if (Type.isObjectLike(array))\r\n                delete array[key]\r\n\r\n            return value\r\n        }\r\n\r\n        return defaultValue\r\n    }\r\n\r\n    /**\r\n     * Удаляет значения массива или объекта по переданному значению\r\n     *\r\n     * @param {array|object} array Массив или объект\r\n     * @param {string|number} value Ключ\r\n     * @param {mixed} defaultValue Значение по умолчанию\r\n     * @returns {mixed}\r\n     */\r\n    static removeValue(array, value, defaultValue = null)\r\n    {\r\n        let result = defaultValue\r\n        if (Type.isArray(array))\r\n        {\r\n            for (let key in array)\r\n            {\r\n                if (array.hasOwnProperty(key))\r\n                {\r\n                    let val = array[key]\r\n\r\n                    if (val === value)\r\n                    {\r\n                        result = key\r\n                        this.remove(array, key)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (Type.isObjectLike(array))\r\n        {\r\n            let keys = Object.keys(array)\r\n            for (let key of keys)\r\n            {\r\n                if (array[key] === value)\r\n                {\r\n                    result = key\r\n                    this.remove(array, key)\r\n                }\r\n            }\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n    /**\r\n     * Возвращает значения указанного столбца в массиве.\r\n     * Входной массив должен быть многомерным или массивом объектов.\r\n     *\r\n     * Например,\r\n     * let array = [\r\n     *      {id: '123', data: 'abc'}\r\n     *      {id: '345', data: 'def'}\r\n     * ];\r\n     *\r\n     * let result = Arrays.getColumn(array, 'id');\r\n     * в результате получается: ['123', '345']\r\n     *\r\n     * использование анонимной функции\r\n     * let result = Arrays.getColumn(array, function(element), {\r\n     *    return element.id;\r\n     * });\r\n     *\r\n     * @param {array|object} array Массив или объект\r\n     * @param {number|string|function} name Название ключа столбца\r\n     * @param {boolean} keepKeys Если false, то результирующий массив будет переиндексирован целыми числами.\r\n     * @returns {array|object} Список значений столбцов\r\n     */\r\n    static getColumn(array, name, keepKeys = true)\r\n    {\r\n        let result = []\r\n        let resultObject = {}\r\n\r\n        if (Type.isObjectLike(array))\r\n        {\r\n            let keys = this.getKeys(array);\r\n\r\n            for (let key of keys)\r\n            {\r\n                let value = array[key]\r\n                if (keepKeys)\r\n                {\r\n                    resultObject[key] = this.getValue(value, name)\r\n                }\r\n                else\r\n                {\r\n                    result.push(this.getValue(value, name))\r\n                }\r\n            }\r\n        }\r\n        else if (Type.isArray(array))\r\n        {\r\n            for (let value of array)\r\n            {\r\n                result.push(this.getValue(value, name))\r\n            }\r\n        }\r\n\r\n        return keepKeys ? resultObject : result\r\n    }\r\n\r\n    static strictIndexOf(array, value, fromIndex)\r\n    {\r\n        let index = fromIndex - 1\r\n        const { length } = array\r\n\r\n        while (++index < length)\r\n        {\r\n            if (array[index] === value)\r\n            {\r\n                return index\r\n            }\r\n        }\r\n        return -1\r\n    }\r\n\r\n    static baseIndexOf(array, value, fromIndex)\r\n    {\r\n        return value === value\r\n            ? this.strictIndexOf(array, value, fromIndex)\r\n            : this.baseFindIndex(array, function (value) {\r\n                return value !== value\r\n            }, fromIndex)\r\n    }\r\n\r\n    static baseFindIndex(array, predicate, fromIndex, fromRight)\r\n    {\r\n        const { length } = array\r\n        let index = fromIndex + (fromRight ? 1 : -1)\r\n\r\n        while ((fromRight ? index-- : ++index < length))\r\n        {\r\n            if (predicate(array[index], index, array))\r\n            {\r\n                return index\r\n            }\r\n        }\r\n        return -1\r\n    }\r\n\r\n    static slice(array, start, end)\r\n    {\r\n        let length = array == null ? 0 : array.length\r\n        if (!length)\r\n        {\r\n            return []\r\n        }\r\n        start = start == null ? 0 : start\r\n        end = end === undefined ? length : end\r\n\r\n        if (start < 0)\r\n        {\r\n            start = -start > length ? 0 : (length + start)\r\n        }\r\n        end = end > length ? length : end\r\n        if (end < 0)\r\n        {\r\n            end += length\r\n        }\r\n        length = start > end ? 0 : ((end - start) >>> 0)\r\n        start >>>= 0\r\n\r\n        let index = -1\r\n        const result = new Array(length)\r\n        while (++index < length)\r\n        {\r\n            result[index] = array[index + start]\r\n        }\r\n        return result\r\n    }\r\n\r\n    /**\r\n     * @param {Array} array\r\n     * @param {number} start\r\n     * @param {number} [end=array.length]\r\n     * @returns {Array}\r\n     */\r\n    static castSlice(array, start, end)\r\n    {\r\n        const { length } = array\r\n        end = end === undefined ? length : end\r\n        return (!start && end >= length) ? array : this.slice(array, start, end)\r\n    }\r\n\r\n    /**\r\n     * Arrays.chunk(['a', 'b', 'c', 'd'], 2)\r\n     * // => [['a', 'b'], ['c', 'd']]\r\n     *\r\n     * Arrays.chunk(['a', 'b', 'c', 'd'], 3)\r\n     * // => [['a', 'b', 'c'], ['d']]\r\n     *\r\n     * @param {Array} array\r\n     * @param {number} [size=1]\r\n     * @returns {Array}\r\n     */\r\n    static chunk(array, size = 1)\r\n    {\r\n        size = Math.max(Type.toInteger(size), 0)\r\n        const length = array == null ? 0 : array.length\r\n        if (!length || size < 1)\r\n        {\r\n            return []\r\n        }\r\n        let index = 0\r\n        let resIndex = 0\r\n        const result = new Array(Math.ceil(length / size))\r\n\r\n        while (index < length)\r\n        {\r\n            result[resIndex++] = this.slice(array, index, (index += size))\r\n        }\r\n        return result\r\n    }\r\n}","import Type from './type'\r\nimport Unicode from \"./unicode\"\r\nimport Arrays from \"./arrays\"\r\n\r\nconst reEscape = /[&<>'\"]/g\r\n\r\nconst reUnescape = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34);/g\r\n\r\nconst escapeEntities = {\r\n    '&': '&amp;',\r\n    '<': '&lt;',\r\n    '>': '&gt;',\r\n    \"'\": '&#39;',\r\n    '\"': '&quot;',\r\n}\r\n\r\nconst unescapeEntities = {\r\n    '&amp;': '&',\r\n    '&#38;': '&',\r\n    '&lt;': '<',\r\n    '&#60;': '<',\r\n    '&gt;': '>',\r\n    '&#62;': '>',\r\n    '&apos;': \"'\",\r\n    '&#39;': \"'\",\r\n    '&quot;': '\"',\r\n    '&#34;': '\"',\r\n}\r\n\r\nexport default class Text\r\n{\r\n    /**\r\n     *\r\n     * @param {string} value\r\n     * @returns {string}\r\n     */\r\n    static encode(value)\r\n    {\r\n        if (Type.isString(value))\r\n        {\r\n            return value.replace(reEscape, item => escapeEntities[item])\r\n        }\r\n\r\n        return value\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} value\r\n     * @returns {string}\r\n     */\r\n    static decode(value)\r\n    {\r\n        if (Type.isString(value))\r\n        {\r\n            return value.replace(reUnescape, item => unescapeEntities[item])\r\n        }\r\n\r\n        return value\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} length\r\n     * @returns {string}\r\n     */\r\n    static getRandom(length = 8)\r\n    {\r\n        return [...Array(length)].map(() => (~~(Math.random() * 36)).toString(36)).join('');\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} str\r\n     * @returns {string}\r\n     */\r\n    static toCamelCase(str)\r\n    {\r\n        if (Type.isEmpty(str))\r\n        {\r\n            return str\r\n        }\r\n\r\n        const regex = /[-_\\s]+(.)?/g\r\n        if (!regex.test(str))\r\n        {\r\n            return str.match(/^[A-Z]+$/) ? str.toLowerCase() : str[0].toLowerCase() + str.slice(1)\r\n        }\r\n\r\n        str = str.toLowerCase()\r\n        str = str.replace(regex, function(match, letter) {\r\n            return letter ? letter.toUpperCase() : ''\r\n        });\r\n\r\n        return str[0].toLowerCase() + str.substr(1)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} str\r\n     * @returns {string}\r\n     */\r\n    static toPascalCase(str)\r\n    {\r\n        if (Type.isEmpty(str))\r\n        {\r\n            return str\r\n        }\r\n\r\n        return this.capitalize(this.toCamelCase(str))\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} str\r\n     * @returns {string}\r\n     */\r\n    static toKebabCase(str)\r\n    {\r\n        if (Type.isEmpty(str))\r\n        {\r\n            return str\r\n        }\r\n\r\n        const matches = str.match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\r\n        if (!matches)\r\n        {\r\n            return str\r\n        }\r\n\r\n        return matches.map(x => x.toLowerCase()).join('-')\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} str\r\n     * @returns {string}\r\n     */\r\n    static capitalize(str)\r\n    {\r\n        if (Type.isEmpty(str))\r\n        {\r\n            return str\r\n        }\r\n\r\n        return str[0].toUpperCase() + str.substr(1)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} symbol\r\n     * @param {string} string\r\n     * @returns {boolean}\r\n     */\r\n    static isIn(symbol, string)\r\n    {\r\n        string = Type.toString(string)\r\n        return string.indexOf(Type.toString(symbol)) !== -1\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} value\r\n     * @param {string|undefined} chars\r\n     * @returns {string}\r\n     */\r\n    static trim(value, chars = undefined)\r\n    {\r\n        if (Type.isString(value))\r\n        {\r\n            if (chars === undefined)\r\n                return value.trim()\r\n\r\n            const strSymbols = this.toArray(value)\r\n            const chrSymbols = this.toArray(chars)\r\n            const start = this.charsStartIndex(strSymbols, chrSymbols)\r\n            const end = this.charsEndIndex(strSymbols, chrSymbols) + 1\r\n\r\n            return Arrays.castSlice(strSymbols, start, end).join('')\r\n        }\r\n\r\n        return value\r\n    }\r\n\r\n    static trimLeft(string, chars)\r\n    {\r\n        if (string && chars === undefined)\r\n        {\r\n            return string[(''.trimLeft ? 'trimLeft' : 'trimStart')]()\r\n        }\r\n        if (!string || !chars)\r\n        {\r\n            return (string || '')\r\n        }\r\n        const strSymbols = this.toArray(string)\r\n        const start = this.charsStartIndex(strSymbols, this.toArray(chars))\r\n        return Arrays.castSlice(strSymbols, start).join('')\r\n    }\r\n\r\n    static trimRight(string, chars)\r\n    {\r\n        if (string && chars === undefined)\r\n        {\r\n            return string[(''.trimRight ? 'trimRight': 'trimEnd')]()\r\n        }\r\n        if (!string || !chars)\r\n        {\r\n            return (string || '')\r\n        }\r\n        const strSymbols = this.toArray(string)\r\n        const end = this.charsEndIndex(strSymbols, this.toArray(chars)) + 1\r\n        return Arrays.castSlice(strSymbols, 0, end).join('')\r\n    }\r\n\r\n    static charsStartIndex(strSymbols, chrSymbols)\r\n    {\r\n        let index = -1\r\n        const length = strSymbols.length\r\n\r\n        while (++index < length && Arrays.baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\r\n        return index\r\n    }\r\n\r\n    static charsEndIndex(strSymbols, chrSymbols)\r\n    {\r\n        let index = strSymbols.length\r\n\r\n        while (index-- && Arrays.baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\r\n        return index\r\n    }\r\n\r\n    static toArray(value)\r\n    {\r\n        return Unicode.has(value)\r\n            ? Unicode.toArray(value)\r\n            : value.split('')\r\n    }\r\n\r\n    /**\r\n     * Заменяет текст внутри части строки.\r\n     *\r\n     * @param {string} string Входная строка.\r\n     * @param {string} replacement Строка замены.\r\n     * @param {number} start Позиция для начала замены подстроки at.\r\n     * Если start неотрицателен, то замена начнется с начального смещения в строку.\r\n     * Если start отрицательный, то замена начнется с начального символа в конце строки.\r\n     * @param {number|null} length Длина подстроки, подлежащей замене.\r\n     * Если задано и положительно, то оно представляет собой длину части строки, которая должна быть заменена.\r\n     * Если он отрицательный, то представляет собой количество символов от конца строки, на котором следует прекратить замену.\r\n     * Если он не задан, то по умолчанию он будет равен длине строки, то есть завершит замену в конце строки.\r\n     * Если длина равна нулю, то эта функция будет иметь эффект вставки замены в строку при заданном начальном смещении.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    static replaceSubstring(string, replacement, start, length = null)\r\n    {\r\n        string = Type.toString(string)\r\n        let stringLength = string.length\r\n\r\n        if (start < 0)\r\n            start = Math.max(0, stringLength + start)\r\n        else if (start > stringLength)\r\n            start = stringLength\r\n\r\n        if (length !== null && length < 0)\r\n            length = Math.max(0, stringLength - start + length)\r\n        else if (length === null || length > stringLength)\r\n            length = stringLength\r\n\r\n        if ((start + length) > stringLength)\r\n            length = stringLength - start\r\n\r\n        return string.substr(0, start) + replacement + string.substr(start + length, stringLength - start - length)\r\n    }\r\n\r\n    /**\r\n     * Усекает строку от начала до указанного количества символов.\r\n     *\r\n     * @param {string} string Строка для обработки.\r\n     * @param {number} length Максимальная длина усеченной строки, включая маркер обрезки.\r\n     * @param {string} trimMarker Строка для добавления в начало.\r\n     * @returns {string}\r\n     */\r\n    static truncateBegin(string, length, trimMarker = \"...\")\r\n    {\r\n        string = Type.toString(string)\r\n        let stringLength = string.length\r\n        if (stringLength <= length)\r\n            return string\r\n\r\n        trimMarker = Type.toString(trimMarker)\r\n        let trimMarkerLength = trimMarker.length\r\n\r\n        return this.replaceSubstring(string, trimMarker, 0, -length + trimMarkerLength)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} string\r\n     * @param {number} length\r\n     * @param {string} trimMarker\r\n     * @returns {string}\r\n     */\r\n    static truncateMiddle(string, length, trimMarker = \"...\")\r\n    {\r\n        string = Type.toString(string)\r\n        let stringLength = string.length\r\n        if (stringLength <= length)\r\n            return string\r\n\r\n        trimMarker = Type.toString(trimMarker)\r\n        let trimMarkerLength = trimMarker.length\r\n\r\n        let start = Type.toInteger(Math.ceil((length - trimMarkerLength) / 2))\r\n        let end = length - start - trimMarkerLength\r\n\r\n        return this.replaceSubstring(string, trimMarker, start, -end)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} string\r\n     * @param {number} length\r\n     * @param {string} trimMarker\r\n     * @returns {string}\r\n     */\r\n    static truncateEnd(string, length, trimMarker = \"...\")\r\n    {\r\n        string = Type.toString(string)\r\n        let stringLength = string.length\r\n        if (stringLength <= length)\r\n            return string\r\n\r\n        trimMarker = Type.toString(trimMarker)\r\n        let trimMarkerLength = trimMarker.length\r\n\r\n        return this.trim(string.substr(0, length - trimMarkerLength)) + trimMarker\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} string\r\n     * @param {object} rules\r\n     * @param {string} tagStart\r\n     * @param {string} tagEnd\r\n     * @returns {string}\r\n     */\r\n    static replaceMacros(string, rules, tagStart = \"#\", tagEnd = \"#\")\r\n    {\r\n        if (Type.isObjectLike(rules))\r\n        {\r\n            let macros = {}\r\n\r\n            Object.keys(rules).forEach(key => {\r\n                macros[tagStart + key + tagEnd] = rules[key]\r\n            })\r\n\r\n            string = Text.replace(string, macros)\r\n        }\r\n\r\n        return string\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} string\r\n     * @param {object} rules\r\n     * @param {string} flag\r\n     * @returns {string}\r\n     */\r\n    static replace(string, rules, flag = 'g')\r\n    {\r\n        string = Type.toString(string)\r\n\r\n        if (Type.isObjectLike(rules))\r\n        {\r\n            Object.keys(rules).forEach(key => {\r\n                string = string.replace(new RegExp(key, flag), rules[key])\r\n            })\r\n        }\r\n\r\n        return string\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} value\r\n     * @returns {string}\r\n     */\r\n    static nl2br(value)\r\n    {\r\n        if (!value || !value.replace)\r\n            return value\r\n\r\n        return value.replace(/([^>])\\n/g, '$1<br/>')\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} value\r\n     * @returns {string}\r\n     */\r\n    static stripTags(value)\r\n    {\r\n        if (!value || !value.split)\r\n            return value\r\n\r\n        return value.split(/<[^>]+>/g).join('')\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} value\r\n     * @returns {string}\r\n     */\r\n    static stripPhpTags(value)\r\n    {\r\n        if (!value || !value.replace)\r\n            return value\r\n\r\n        return value.replace(/<\\?(.|[\\r\\n])*?\\?>/g, '')\r\n    }\r\n\r\n    /**\r\n     * Взрывает строку в массив, опционально обрезает значения и пропускает пустые\r\n     *\r\n     * @param {string} value\r\n     * @param {string} separator\r\n     * @param {boolean} trim\r\n     * @param {boolean} skipEmpty\r\n     * @returns {array}\r\n     */\r\n    static explode(value, separator = ',', trim = true, skipEmpty = false)\r\n    {\r\n        value = Type.toString(value)\r\n        let result = value.split(separator)\r\n        if (!!trim)\r\n        {\r\n            result = result.map(i => this.trim(i))\r\n        }\r\n        if (skipEmpty)\r\n        {\r\n            result = result.filter(i => i !== \"\")\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n    /**\r\n     * Метод для обрезания строк.\r\n     *\r\n     * @param {string} value\r\n     * @param {number} offset\r\n     * @param {number|null} length\r\n     * @returns {string}\r\n     */\r\n    static cut(value, offset, length = null)\r\n    {\r\n        value = Type.toString(value)\r\n        return value.substr(offset, length)\r\n    }\r\n\r\n    /**\r\n     * Возвращает позицию подстроки в строке.\r\n     *\r\n     * @param {string} needle Подстрока.\r\n     * @param {string} haystack Строка.\r\n     * @param {number} offset Смещение.\r\n     * @param {boolean} insensitive Нечювствительность к регистру.\r\n     * @param {boolean} last Искать последнюю подстроку.\r\n     * @returns {number|false} Позиция, с которой начинается первая или последняя найденная подстрока или `false`, если подстрока не найдена.\r\n     */\r\n    static position(needle, haystack, offset = 0, insensitive = false, last = false)\r\n    {\r\n        needle = Type.toString(needle)\r\n        haystack = Type.toString(haystack)\r\n\r\n        if (insensitive)\r\n        {\r\n            haystack = haystack.toLowerCase()\r\n            needle = needle.toLowerCase()\r\n        }\r\n\r\n        let pos = haystack.indexOf(needle, offset)\r\n\r\n        if (last)\r\n        {\r\n            offset = pos\r\n\r\n            while (true)\r\n            {\r\n                let res = haystack.indexOf(needle, offset += 1)\r\n\r\n                if (res == -1) break\r\n\r\n                pos = res\r\n            }\r\n        }\r\n\r\n        return pos >= 0 ? pos : false\r\n    }\r\n\r\n    /**\r\n     * Сравнивкт две строки\r\n     *\r\n     * @param {string} value1 Первая строка для сравнения.\r\n     * @param {string} value2 Вторая строка для сравнения.\r\n     * @param {number} length Количество сравневаемых символов. Если 0, то сравнивает всю строку.\r\n     * @param {boolean} insensitive Нечювствительность к регистру.\r\n     * @returns {boolean} Результат сравнения.\r\n     */\r\n    static compare(value1, value2, length = 0, insensitive = false)\r\n    {\r\n        value1 = Type.toString(value1)\r\n        value2 = Type.toString(value2)\r\n        length = Type.toInteger(length)\r\n\r\n        if (length > 0)\r\n        {\r\n            value1 = this.cut(value1, 0, length)\r\n            value2 = this.cut(value2, 0, length)\r\n        }\r\n\r\n        return this.position(value1, value2, 0, insensitive, false) === 0\r\n    }\r\n}","import Type from \"./type\"\r\n\r\nexport default class Event\r\n{\r\n    constructor()\r\n    {\r\n        /**\r\n         * Наименование события. Обработчики могут использовать\r\n         * @type {string}\r\n         */\r\n        this.name = \"\"\r\n\r\n        /**\r\n         * Определяет, является ли событие обработанным. Когда установлено в `true`,\r\n         * @type {boolean}\r\n         */\r\n        this.handled = false\r\n\r\n        /**\r\n         * Данные, которые приходят из [[Event.on()]] когда прикрепляется обработчик события.\r\n         * @type {*}\r\n         */\r\n        this.data = {}\r\n\r\n        /**\r\n         * Содержит все зарегистрированные события.\r\n         * @type {WeakMap}\r\n         */\r\n        this.events = new WeakMap()\r\n    }\r\n\r\n    /**\r\n     * Получает массив событий из WeakMap\r\n     * @param {Object} eventObject\r\n     * @returns {Object}\r\n     */\r\n    _get(eventObject)\r\n    {\r\n        return this.events.get(eventObject) || {}\r\n    }\r\n\r\n    /**\r\n     * Прикрепляет обработчик события к объекту.\r\n     * @param {Object|string} eventObject\r\n     * @param {string|Function} eventName\r\n     * @param {Function|null} eventHandler\r\n     * @param {*} data\r\n     * @param {boolean|null} append\r\n     */\r\n    on(eventObject, eventName, eventHandler, data = null, append = true)\r\n    {\r\n        if (Type.isString(eventObject))\r\n        {\r\n            append = Type.isNull(data) ? true : data\r\n            data = eventHandler || null\r\n            eventHandler = eventName\r\n            eventName = eventObject\r\n            eventObject = window\r\n        }\r\n\r\n        if (\r\n            !Type.isFunction(eventHandler) ||\r\n            Type.isEmpty(eventName) ||\r\n            !Type.isObject(eventObject)\r\n        )\r\n            return\r\n\r\n        eventName = eventName.toLowerCase()\r\n\r\n        let events = this._get(eventObject)\r\n\r\n        if (!Type.isArray(events[eventName]))\r\n            events[eventName] = []\r\n\r\n        if (!!append)\r\n            events[eventName].push([eventHandler, data])\r\n        else\r\n            events[eventName].unshift([eventHandler, data])\r\n\r\n        this.events.set(eventObject, events)\r\n    }\r\n\r\n    /**\r\n     * Открепляет обработчик события от объекта.\r\n     * @param {Object|string} eventObject\r\n     * @param {string|Function} eventName\r\n     * @param {Function|undefined} eventHandler\r\n     * @returns {boolean}\r\n     */\r\n    off(eventObject, eventName, eventHandler)\r\n    {\r\n        if (Type.isString(eventObject))\r\n        {\r\n            eventHandler = eventName\r\n            eventName = eventObject\r\n            eventObject = window\r\n        }\r\n\r\n        eventName = eventName.toLowerCase()\r\n\r\n        let events = this._get(eventObject)\r\n\r\n        if (Type.isNull(eventHandler))\r\n        {\r\n            delete events[eventName]\r\n            return true\r\n        }\r\n\r\n        let removed = false\r\n\r\n        if (events && Type.isArray(events[eventName]))\r\n        {\r\n            events[eventName].forEach(function (event, i) {\r\n                if (event[0] === eventHandler)\r\n                {\r\n                    events[eventName].splice(i, 1)\r\n                    removed = true\r\n                }\r\n            })\r\n        }\r\n\r\n        return removed\r\n    }\r\n\r\n    /**\r\n     * Вызывает событие объекта.\r\n     * @param {Object|string} eventObject\r\n     * @param {string|Object} eventName\r\n     * @param {Array|null} eventParams\r\n     * @param {Event} event\r\n     */\r\n    trigger(eventObject, eventName, eventParams = null, event = null)\r\n    {\r\n        if (Type.isString(eventObject))\r\n        {\r\n            event = eventParams || null\r\n            eventParams = eventName || []\r\n            eventName = eventObject\r\n            eventObject = window\r\n        }\r\n\r\n        if (eventParams === null)\r\n            eventParams = []\r\n\r\n        eventName = eventName.toLowerCase()\r\n\r\n        let globalEvents = this._get(window)\r\n        let globalHandlers = globalEvents && Type.isArray(globalEvents[eventName]) ? globalEvents[eventName] : []\r\n        let objectHandlers = []\r\n\r\n        if (eventObject !== window && Type.isObject(eventObject))\r\n        {\r\n            let objectEvents = this._get(eventObject)\r\n            if (objectEvents && Type.isArray(objectEvents[eventName]))\r\n            {\r\n                objectHandlers = objectEvents[eventName]\r\n            }\r\n        }\r\n\r\n        let handlers = globalHandlers.concat(objectHandlers)\r\n\r\n        if (event === null)\r\n            event = new Event()\r\n\r\n        event.handled = false\r\n        event.name = eventName\r\n\r\n        for (let i = 0; i <= handlers.length - 1; i++)\r\n        {\r\n            let handler = handlers[i]\r\n\r\n            event.data = handler[1]\r\n\r\n            if (eventParams.indexOf(event) < 0)\r\n                eventParams.unshift(event)\r\n\r\n            if (Type.isFunction(handler[0]))\r\n                handler[0].apply(eventObject, eventParams)\r\n\r\n            if (event.handled)\r\n                break\r\n        }\r\n\r\n    }\r\n\r\n}","import Type from './lib/type'\r\nimport Browser from './lib/browser'\r\nimport Event from './lib/event'\r\nimport Text from './lib/text'\r\n\r\nexport const type = {\r\n    ...Object.getOwnPropertyNames(Type)\r\n        .filter(key => !['name', 'length', 'prototype', 'caller', 'arguments'].includes(key))\r\n        .reduce((acc, key) => {\r\n            acc[key] = Type[key]\r\n            return acc\r\n        }, {}),\r\n    isNotEmptyString: value => Type.isString(value) && value !== '',\r\n    isNotEmptyObject: value => Type.isObjectLike(value) && Object.keys(value).length > 0,\r\n    isMapKey: Type.isObject,\r\n    stringToInt: (value) => {\r\n        const parsed = parseInt(value)\r\n        return !Number.isNaN(parsed) ? parsed : 0\r\n    },\r\n}\r\n\r\nexport const browser = {\r\n    IsOpera: Browser.isOpera,\r\n    IsIE: Browser.isIE,\r\n    IsIE6: Browser.isIE6,\r\n    IsIE7: Browser.isIE7,\r\n    IsIE8: Browser.isIE8,\r\n    IsIE9: Browser.isIE9,\r\n    IsIE10: Browser.isIE10,\r\n    IsIE11: Browser.isIE11,\r\n    IsSafari: Browser.isSafari,\r\n    IsFirefox: Browser.isFirefox,\r\n    IsChrome: Browser.isChrome,\r\n    DetectIeVersion: Browser.detectIEVersion,\r\n    IsMac: Browser.isMac,\r\n    IsAndroid: Browser.isAndroid,\r\n    isIPad: Browser.isIPad,\r\n    isIPhone: Browser.isIPhone,\r\n    IsIOS: Browser.isIOS,\r\n    IsMobile: Browser.isMobile,\r\n    isRetina: Browser.isRetina,\r\n    IsDoctype: Browser.isDoctype,\r\n    SupportLocalStorage: Browser.isLocalStorageSupported,\r\n    addGlobalClass: Browser.addGlobalClass,\r\n    DetectAndroidVersion: Browser.detectAndroidVersion,\r\n    isPropertySupported: Browser.isPropertySupported,\r\n    addGlobalFeatures: Browser.addGlobalFeatures,\r\n}\r\n\r\nexport const event = new Event()\r\n\r\nexport const {\r\n    on,\r\n    off,\r\n    trigger,\r\n} = event\r\n\r\nexport const {\r\n    getRandom,\r\n    replaceMacros,\r\n} = Text\r\n","import './internal/b'\r\n\r\nimport Type from './lib/type'\r\nimport Browser from './lib/browser'\r\nimport Text from './lib/text'\r\nimport Arrays from './lib/arrays'\r\nimport Unicode from './lib/unicode'\r\n\r\nexport {\r\n    Type,\r\n    Browser,\r\n    Text,\r\n    Arrays,\r\n    Unicode,\r\n}\r\n\r\nexport * from './libs'\r\n\r\nif (global && global.window && global.window.B)\r\n{\r\n    Object.assign(global.window.B, exports)\r\n}",null]}